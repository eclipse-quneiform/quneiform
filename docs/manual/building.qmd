# Building

`Quneiform` requires a C++20 compiler and can be built on Windows, macOS, and Linux.

*Cmake* scripts are included for building both the command-line and GUI (graphical user interface) versions. *Cmake* 3.25 or higher is required.

If compiling with GCC, GCC 12.2.1 or higher is required.

For the GUI version, [wxWidgets](https://github.com/wxWidgets/wxWidgets) 3.3 or higher is required.

## Command-line Utility

`Quneiform` can be configured and built with *Cmake*.

On Unix:

``` {.bash filename="Terminal"}
cmake . -DCMAKE_BUILD_TYPE=Release
cmake --build . --target all -j $(nproc) --config Release
```

On Windows, "CMakeLists.txt" can be opened and built directly in Visual Studio.

After building, "quneiform" will be available in the "bin" folder.

{{< pagebreak >}}

## GUI Version

[wxWidgets](https://github.com/wxWidgets/wxWidgets) 3.3 or higher is required for building the graphical user interface version.

Download [wxWidgets](https://github.com/wxWidgets/wxWidgets), placing it at the same folder level as this project.
After building *wxWidgets*, *Quneiform* can be configured and built with *Cmake*.

On Linux/macOS:

``` {.bash filename="Terminal"}
# download and build wxWidgets one folder above
cd ..
git clone https://github.com/wxWidgets/wxWidgets.git --recurse-submodules
cd wxWidgets
cmake . -DCMAKE_INSTALL_PREFIX=./wxlib -DwxBUILD_SHARED=OFF \
    -D"CMAKE_OSX_ARCHITECTURES:STRING=arm64;x86_64" \
    -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 \
    -DwxBUILD_OPTIMISE=ON -DwxBUILD_STRIPPED_RELEASE=ON \
    -DCMAKE_BUILD_TYPE=Release
cmake --build . --target install --config Release

# go back into the project folder and build the GUI version
cd ..
cd quneiform/gui
cmake . -DCMAKE_BUILD_TYPE=Release
cmake --build . --target all --config Release
```

::: {.notesection data-latex=""}
On macOS, a universal binary 2 (containing arm64 and x86\_64 binaries) will be built with the above commands.
:::

On Windows with Visual Studio, build wxWidgets with the defaults, except `wxBUILD_SHARED` should be set to "OFF"
(and `MAKE_BUILD_TYPE` set to "Release" for release builds).

Open "gui/CMakeLists.txt" in Visual Studio, setting the *CMake* setting's configuration type to "Release" for a release build.

After building, "quneiform" will be available in the "bin" folder.
